server {
       listen      80;
       server_name localhost;
       return 301 https://$host$request_uri;
       }
 
server {
       listen              443 ssl;
       keepalive_timeout   70;
       server_tokens       off;
 
       add_header X-XSS-Protection "1; mode=block";
       add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
       add_header X-Content-Type-Options nosniff;
       add_header Referrer-Policy "no-referrer-when-downgrade";
       add_header Feature-Policy "geolocation 'none';midi 'none';notifications 'none';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';speaker 'self';vibrate 'none';fullscreen 'self';payment 'none';";
       add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.<YOUR_DOMAIN> https://online.swagger.io data:; media-src 'self'; frame-src 'self'; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://*.<YOUR_DOMAIN>";
 
       ssl_protocols TLSv1.2;
       ssl_prefer_server_ciphers on;
       ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";
 
       ssl_certificate     /etc/pki/<YOUR_CERTIFICATE>;
       ssl_certificate_key /etc/pki/<YOUR_SSL_KEY>;
       ssl_session_cache   shared:SSL:10m;
       ssl_session_timeout 10m;
 
       # the domain name it will serve for
       server_name <YOUR_SERVER_HOSTNAME>;   # substitute by your FQDN and machine's IP address
       charset     utf-8;
 
       # Max upload size
       client_max_body_size 75M;   # adjust to taste
 
       # Django project's static files
       location /static {
          alias /var/badgr/code/staticfiles;
       }
 
       # Django media
       location /media {
          # Django project's static files
          add_header Access-Control-Allow-Origin *;
          alias /var/badgr/code/mediafiles;
       }
 
       location = / {
          return 301 /docs/;
       }
 
       location / {
          # checks for static file, if not found proxy to app
          try_files $uri @proxy_to_app;
       }
 
       location @proxy_to_app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          # we don't want nginx trying to do something clever with
          # redirects, we set the Host: header above already.
          proxy_redirect off;
          proxy_pass http://badgr:8000;
          #proxy_pass http://unix:/var/badgr/code/badgr.sock;
       }
    }